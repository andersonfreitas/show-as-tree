#!/usr/bin/env python
import wx
import sys
import fileinput

def todict(X):
    d = {}
    for path in X:
        current_level = d
        for part in path:
            if part not in current_level:
                current_level[part] = {}
            current_level = current_level[part]
    return d

class TreeFrame(wx.Frame):
  def __init__(self):
    wx.Frame.__init__(self, None, title='show as tree')

    tree_ctrl = wx.TreeCtrl(self, -1, style=wx.TR_DEFAULT_STYLE | \
        wx.TR_FULL_ROW_HIGHLIGHT | \
        wx.TR_EDIT_LABELS | wx.TR_HIDE_ROOT)

    root = tree_ctrl.AddRoot('/')

    def append(base, lst):
      for k, v in lst.iteritems():
        sub = tree_ctrl.AppendItem(base, k)
        append(sub, v)

    append(root, structure)

    #tree_ctrl.ExpandAll()
    self.Centre()

# Every wxWidgets application must have a class derived from wx.App
class MyApp(wx.App):
  # wxWindows calls this method to initialize the application
  def OnInit(self):
    # Create an instance of our customized Frame class
    frame = TreeFrame()
    frame.Show(True)

    # Tell wxWindows that this is our main window
    self.SetTopWindow(frame)

    # Return a success flag
    return True

if __name__ == '__main__':

  #text_file = open(sys.argv[1], "r")
  #lines = text_file.readlines()

  lines = fileinput.input()


  dirs = []
  for l in lines:
    dirs.append(l.replace('\n', '')[1:].split('/'))

  structure = todict(dirs)

  app = MyApp(0)
  app.MainLoop()
